{"version":3,"sources":["webpack://codestream/webpack/universalModuleDefinition","webpack://codestream/webpack/bootstrap","webpack://codestream/./src/blockstream.ts","webpack://codestream/./src/index.ts"],"names":[],"mappings":"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","file":"codestream.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"codestream\"] = factory();\n\telse\n\t\troot[\"codestream\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","let isEnabled = false;\n\n/**\n * Interface to the stream handle\n */\ninterface ICodeStreamHandle {\n  name: string;\n  path: string[];\n  fork: (\n    forkName: string,\n    forkBlock: (forkHandle: ICodeStreamHandle) => any\n  ) => {};\n  console: CodeStreamConsole;\n}\n\n/**\n * Console to output info\n */\nclass CodeStreamConsole {\n  constructor(private blockHandle: ICodeStreamHandle) {}\n\n  private write(args: any[], method: string) {\n    const codeAt = new Error(); // should track the parent\n    const lines = codeAt.stack.split(\"\\n\").reduce((acc, line) => {\n      if (line === \"Error\") {\n        return acc;\n      }\n      if (line.indexOf(\"CodeStream\") < 0) {\n        acc.push(line);\n      }\n      return acc;\n    }, []);\n    const line = lines[0];\n    \n    const path = line.split(\"/\");\n\n    args.push(\"\\n\" + this.blockHandle.path.join(\" \"));\n    args.push(\"\\n\" + line);\n    // should write a path down bellow\n    (console as any)[method].apply(console, args);\n  }\n\n  enable() {\n    isEnabled = true;\n  }\n\n  disable() {\n    isEnabled = false;\n  }\n\n  log() {\n    this.write(Array.prototype.splice.call(arguments, 0), \"log\");\n  }\n\n  error() {\n    this.write(Array.prototype.splice.call(arguments, 0), \"error\");\n  }\n\n  info() {\n    this.write(Array.prototype.splice.call(arguments, 0), \"info\");\n  }\n\n  debug() {\n    this.write(Array.prototype.splice.call(arguments, 0), \"debug\");\n  }\n\n  warn() {\n    this.write(Array.prototype.splice.call(arguments, 0), \"warn\");\n  }\n\n  table() {\n    this.write(Array.prototype.splice.call(arguments, 0), \"table\");\n  }\n}\n\nclass CodeStreamHandle implements ICodeStreamHandle {\n  private _console: CodeStreamConsole;\n\n  constructor(private blockName: string, private blockPath: string[]) {\n    this._console = new CodeStreamConsole(this);\n  }\n\n  get name(): string {\n    return this.blockName;\n  }\n\n  get path(): string[] {\n    return [...this.blockPath, this.name];\n  }\n\n  fork(\n    forkName: string,\n    forkBlock: (forkHandle: ICodeStreamHandle) => any\n  ): any {\n    const handle = new CodeStreamHandle(forkName, this.path);\n    const doGroup = this.path.length > 0;\n    // const groupName = doGroup ? [...this.path, forkName].join(\"->\") : null;\n    const groupName = forkName;\n\n    if (doGroup) {\n      console.group(groupName);\n    }\n\n    const ret = forkBlock(handle);\n\n    if (doGroup) {\n      console.groupEnd();\n    }\n    return ret;\n  }\n\n  get console() {\n    return this._console;\n  }\n\n  toString() {\n    return \"\\n\" + this.path.join(' / ');\n  }\n\n  _toString() {\n    return this.toString();\n  }\n\n  tag() {\n    return this.toString();\n  }\n}\n\nconst CodeStreamBlock = (\n  blockName: string,\n  blockCode: (forkHandle: ICodeStreamHandle) => any\n) => {\n  const handle = new CodeStreamHandle(\"\", []);\n  const ret = handle.fork(blockName, blockCode);\n  return ret;\n};\n\nconst block = CodeStreamBlock;\n\nexport { CodeStreamBlock, ICodeStreamHandle, CodeStreamHandle, block };\n\n/**\n * codeblock('#blockName', (blockHandle) => {\n *  parentBlockHandle.fork('#blockFork', (forkBlockHandle) => {\n *  })\n * })\n */\n","export * from \"./blockstream\";\n"],"sourceRoot":""}